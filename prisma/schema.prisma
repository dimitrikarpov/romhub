generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  playlists     Playlist[]
}

model Playlist {
  id          String          @id @default(cuid())
  type        String?
  title       String          @default("New Playlist")
  description String?
  isPublic    Boolean         @default(false)
  updatedAt   DateTime        @default(now())
  userId      String
  User        User            @relation(fields: [userId], references: [id])
  entries     PlaylistEntry[]
}

model PlaylistEntry {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  foo        String?  @default("bar")
  romId      String
  rom        Rom      @relation(fields: [romId], references: [id])
  playlistId String
  playlist   Playlist @relation(fields: [playlistId], references: [id])
}

model Rom {
  id            String          @id @default(cuid())
  name          String
  platform      String
  file          String
  images        String?
  description   String?
  sha1          String          @unique
  crc32         String
  PlaylistEntry PlaylistEntry[]
}
